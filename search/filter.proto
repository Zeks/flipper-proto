/*
Flipper is a replacement search engine for fanfiction.net search results
Copyright (C) 2017-2018  Marchenko Nikolai

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
syntax = "proto3";

package ProtoSpace;

message SlashFilter{
    bool  use_slash_filter                           = 1;
    int32 slash_filter_level                         = 2;
    bool  exclude_slash                              = 3;
    bool  include_slash                              = 4;
    bool  enable_exceptions                          = 5;
    repeated int32 fandom_exceptions                 = 6; 
    bool show_exact_level                            = 7; 
    bool filter_only_mature                          = 8;
}

message Recommendations{
    bool list_open_mode                             = 1;
    int32 list_for_recommendations                  = 2;
    int32 use_this_recommender_only                 = 3;
    int32 min_recommendations                       = 4;
    bool show_origins_in_lists                      = 5;
}

message BasicFilters{
    string website                  = 1;
    int32 min_words                 = 2;
    int32 max_words                 = 3;
    int32 max_fics                  = 4;
    int32 min_favourites            = 5;
    bool allow_unfinished           = 6;
    bool allow_no_genre             = 7;
    bool ensure_completed           = 8;
    bool ensure_active              = 9;
}

message ReviewBias{
    enum ReviewBiasMode{
        bias_none           = 0;
        bias_favor          = 1;
        bias_exclude        = 2;
    };
    enum BiasOperator{
        bo_more             = 0;
        bo_less             = 1;
    };

    ReviewBiasMode bias_mode   = 1;
    BiasOperator bias_operator = 2;
    double bias_ratio          = 3;
}

message RecentAndPopular{
    int32  fav_ratio   = 1;
    string date_cutoff = 2;
}


message ContentMatchFilter
{
    int32 fandom                        = 1; 
    bool use_ignored_fandoms            = 2;
    bool include_crossovers             = 3;
    bool crossovers_only                = 4;
    bool other_fandoms_mode             = 5;
    
    repeated string genre_exclusion     = 6;
    repeated string genre_inclusion     = 7;
    repeated string word_exclusion      = 8;
    repeated string word_inclusion      = 9;
    int32 crossover_fandom              = 10;
}

message TagFilter{
    bool ignore_already_tagged  = 1;
    //repeated string active_tags = 2; // this will only be necessary when proper DB with uac is in place
    //repeated int32 all_tagged   = 3; // this will only be necessary when proper DB with uac is in place
}

message SizeLimits{
    int32 record_limit              = 1;
    int32 record_page               = 2;
}

message Filter{
    enum FilterMode{
        filtering_undefined          = 0;
        filtering_in_fics            = 1;
        filtering_in_recommendations = 2;
        filtering_whole_list         = 3;
    };
    enum SortMode {
    sm_undefined         = 0;
    sm_wordcount         = 1;
    sm_favourites        = 2;
    sm_fav_rate          = 3;
    sm_update_date 	     = 4;
    sm_publish_date      = 5;
    sm_rec_count         = 6;
    sm_wcr_cr            = 7;
    sm_rev_to_fav        = 8;
    sm_genre_values      = 9;
    sm_genre_scores      = 10;
   }
    enum RatingFilter{
        rt_t_m        = 0;
        rt_t          = 1;
        rt_m          = 2;
    };
    enum GenrePresence{
        gp_considerable = 0;
        gp_medium = 1;
        gp_minimal = 2;
        gp_none = 3;
    };
    
    bool randomize_results                      = 1;
    BasicFilters basic_filters                  = 2;
    FilterMode filtering_mode                   = 3;
    SizeLimits size_limits                      = 4;
    SortMode sort_mode                          = 5;
                
    ReviewBias review_bias                      = 6;
    RecentAndPopular recent_and_popular         = 7;
    ContentMatchFilter content_filter           = 8;
    TagFilter tag_filter                        = 9;
    SlashFilter slash_filter                    = 10;
    Recommendations recommendations             = 11;
    bool tags_are_for_authors                   = 12;
    RatingFilter rating                         = 13;
    bool use_implied_genre                      = 14;
    GenrePresence genre_presence_include        = 15;  
    GenrePresence genre_presence_exclude        = 16;
    int32 use_this_author_only                  = 17; 
    repeated int32 used_recommender_ids         = 18;
    bool descending_direction                   = 19;
    bool display_purged_fics                    = 20;
    string protocol_version                     = 21;
    bool use_and_for_tags                       = 22;
    bool filter_version                         = 23; 
}
